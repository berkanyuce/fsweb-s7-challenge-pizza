{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar react_1 = __importDefault(require(\"react\"));\nvar maskUtility_1 = __importDefault(require(\"../../shared/maskUtility\"));\nvar type_check_utility_1 = require(\"type-check-utility\");\nvar utility_1 = __importDefault(require(\"../../shared/utility\"));\nvar customInput_1 = __importDefault(require(\"./customInput\"));\nvar formPropsIns_1 = require(\"../formPropsIns\");\nvar formVali_1 = __importDefault(require(\"../validation/formVali\"));\nvar formUtility_1 = __importDefault(require(\"../formUtility\"));\nvar MaskedInput = function (_a) {\n  var _b = _a.mask,\n    mask = _b === void 0 ? [] : _b,\n    extractValueToSet = _a.extractValueToSet,\n    props = __rest(_a, [\"mask\", \"extractValueToSet\"]);\n  function changeEvent(e) {\n    var toMaskResult = maskUtility_1.default.toMaskWithCursor(e, mask);\n    maskUtility_1.default.updateEventArgs(e, toMaskResult);\n    maskUtility_1.default.updateDetail(e, mask);\n    props.onChange && props.onChange(e);\n  }\n  function onBlur(e) {\n    maskUtility_1.default.updateDetail(e, mask);\n    props.onBlur && props.onBlur(e);\n  }\n  function keyPressEvent(e) {\n    if (mask.length === 0) {\n      props.onKeyPress && props.onKeyPress(e);\n      return;\n    }\n    var _a = utility_1.default.cursor(e),\n      start = _a.cursorStart,\n      newLengthIsPermitted = _a.newLengthIsPermitted;\n    if (newLengthIsPermitted >= mask.length) {\n      e.preventDefault();\n      props.onKeyPress && props.onKeyPress(e);\n      return;\n    }\n    while (true) {\n      if (start >= mask.length) {\n        e.preventDefault();\n        break;\n      }\n      var m = mask[start];\n      if (type_check_utility_1.isRegex(m)) {\n        var reg = m;\n        if (!reg.test(e.key)) {\n          e.preventDefault();\n        }\n        break;\n      } else {\n        start++;\n      }\n    }\n    props.onKeyPress && props.onKeyPress(e);\n  }\n  function extractValueToSetLocal(e, value) {\n    var valueWithCursor = maskUtility_1.default.toMaskWithCursor(e || {\n      target: {\n        value: value\n      }\n    }, mask);\n    return valueWithCursor;\n  }\n  function keyDownEvent(e) {\n    var conditionToOnlyMoveBack = function (index) {\n      var arr = utility_1.default.strings2FlatArray(maskUtility_1.default.extractConstFromMask(mask));\n      return arr.includes(e.target.value[index]);\n    };\n    formUtility_1.default.backspaceDoNotDelete(e, conditionToOnlyMoveBack);\n  }\n  var params = {\n    validation: new formPropsIns_1.ValidationIns(formVali_1.default.alwaysValid),\n    onBlur: onBlur,\n    onChange: changeEvent,\n    extractValueToValidate: function (value) {\n      return maskUtility_1.default.extractPureValue(value, mask);\n    },\n    onKeyPress: keyPressEvent,\n    onKeyDown: keyDownEvent\n  };\n  return react_1.default.createElement(customInput_1.default, __assign({\n    extractValueToSet: extractValueToSet || extractValueToSetLocal\n  }, props, params));\n};\nexports.default = MaskedInput;","map":{"version":3,"names":["react_1","__importDefault","require","maskUtility_1","type_check_utility_1","utility_1","customInput_1","formPropsIns_1","formVali_1","formUtility_1","MaskedInput","_a","_b","mask","extractValueToSet","props","__rest","changeEvent","e","toMaskResult","default","toMaskWithCursor","updateEventArgs","updateDetail","onChange","onBlur","keyPressEvent","length","onKeyPress","cursor","start","cursorStart","newLengthIsPermitted","preventDefault","m","isRegex","reg","test","key","extractValueToSetLocal","value","valueWithCursor","target","keyDownEvent","conditionToOnlyMoveBack","index","arr","strings2FlatArray","extractConstFromMask","includes","backspaceDoNotDelete","params","validation","ValidationIns","alwaysValid","extractValueToValidate","extractPureValue","onKeyDown","createElement","__assign","exports"],"sources":["../../../form/controls/maskedInput.tsx"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}