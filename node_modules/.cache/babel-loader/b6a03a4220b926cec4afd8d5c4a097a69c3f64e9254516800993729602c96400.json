{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar constants_1 = __importDefault(require(\"../../shared/constants\"));\nvar enumerations_1 = require(\"../../shared/enumerations\");\nvar messages_1 = __importDefault(require(\"../../shared/messages\"));\nvar formPropsIns_1 = require(\"../formPropsIns\");\nfunction isPasswordValid(data, passwordCriteria) {\n  var _a, _b, _c, _d, _e, _f;\n  data = data || '';\n  var addPassFail = function (key, message) {\n    if (message === void 0) {\n      message = null;\n    }\n    result.push(new formPropsIns_1.PasswordFailIns(key, data, message));\n  };\n  var validRange = function (data, start, end) {\n    return data >= start && data <= end;\n  };\n  var validSymbols = function (data) {\n    var syms = constants_1.default.ascii.symbols;\n    return syms.includes(data);\n  };\n  function validate(toCompare, key, messageFunc, start, end, checkRange) {\n    if (checkRange === void 0) {\n      checkRange = true;\n    }\n    if (!toCompare) return;\n    data = data || '';\n    var count = 0;\n    for (var i = 0; i < data.length; i++) {\n      var el = checkRange ? data.charCodeAt(i) : data[i];\n      var validFunc = checkRange ? validRange : validSymbols;\n      var t = validFunc(el, start, end) ? 1 : 0;\n      count += t;\n    }\n    if (count < toCompare) addPassFail(key, messageFunc(toCompare));\n  }\n  function checkSequence(key, start, end, toCompare, message) {\n    var count = 0,\n      nextEl = -1;\n    for (var i = 0; i < data.length; i++) {\n      var el = data.charCodeAt(i);\n      if (count === 0) {\n        if (validRange(el, start, end)) {\n          nextEl = el + 1;\n          count++;\n        } else count = 0;\n      } else {\n        if (el === nextEl) {\n          nextEl++;\n          count++;\n        } else {\n          nextEl = -1;\n          count = 0;\n        }\n      }\n      if (count > toCompare) {\n        addPassFail(key, message);\n        break;\n      }\n    }\n  }\n  var result = [];\n  if (!data) {\n    addPassFail('required', data);\n    return new formPropsIns_1.DetailIns(null, data, false, 'required', result);\n  }\n  var pc = passwordCriteria;\n  var passMess = messages_1.default.password;\n  var ascii = constants_1.default.ascii;\n  if (pc.minLength && data.length < pc.minLength) addPassFail('minLength', passMess.minLength(pc.minLength));\n  if (pc.maxLength && data.length > pc.maxLength) addPassFail('maxLength', passMess.maxLength(pc.maxLength));\n  validate(pc.capital, 'capital', passMess.capital, ascii.A, ascii.Z);\n  validate(pc.numberCount, 'numberCount', passMess.numberCount, ascii.zero, ascii.nine);\n  validate(pc.symbols, 'symbols', passMess.symbols, 0, 0, false);\n  checkSequence(constants_1.default.attributes.numberSeq, ascii.zero, ascii.nine, (_a = pc.sequence) === null || _a === void 0 ? void 0 : _a.number, passMess.numberSeq((_b = pc.sequence) === null || _b === void 0 ? void 0 : _b.number));\n  checkSequence(constants_1.default.attributes.characterSeq, ascii.a, ascii.z, (_c = pc.sequence) === null || _c === void 0 ? void 0 : _c.characters, passMess.characterSeq((_d = pc.sequence) === null || _d === void 0 ? void 0 : _d.characters));\n  checkSequence(constants_1.default.attributes.characterSeq, ascii.A, ascii.Z, (_e = pc.sequence) === null || _e === void 0 ? void 0 : _e.characters, passMess.characterSeq((_f = pc.sequence) === null || _f === void 0 ? void 0 : _f.characters));\n  var passwordStrength = checkPassStrength(data);\n  result.push(new formPropsIns_1.PasswordFailIns('strength', data, '', passwordStrength));\n  var errorResult = result.filter(function (n) {\n    return n.attribute !== enumerations_1.ValidationType.strength;\n  });\n  return new formPropsIns_1.DetailIns(null, data, !errorResult.length, null, result);\n}\nfunction checkPassStrength(password) {\n  function scorePassword(password) {\n    var score = 0;\n    if (!password) return score;\n    var letters = {};\n    for (var i = 0; i < password.length; i++) {\n      letters[password[i]] = (letters[password[i]] || 0) + 1;\n      score += 5.0 / letters[password[i]];\n    }\n    var variations = {\n      digits: /\\d/.test(password),\n      lower: /[a-z]/.test(password),\n      upper: /[A-Z]/.test(password),\n      nonWords: /\\W/.test(password)\n    };\n    var variationCount = 0;\n    for (var check in variations) {\n      variationCount += variations[check] === true ? 1 : 0;\n    }\n    score += (variationCount - 1) * 10;\n    return score;\n  }\n  var score = scorePassword(password);\n  var strength = enumerations_1.PasswordStrength.VeryWeak;\n  if (score > 90) strength = enumerations_1.PasswordStrength.VeryStrong;else if (score > 75) strength = enumerations_1.PasswordStrength.Strong;else if (score > 60) strength = enumerations_1.PasswordStrength.Strong;else if (score >= 30) strength = enumerations_1.PasswordStrength.Weak;\n  return {\n    score: score,\n    strength: strength\n  };\n}\nvar passwordVali = {\n  PasswordStrength: enumerations_1.PasswordStrength,\n  isPasswordValid: isPasswordValid\n};\nexports.default = passwordVali;","map":{"version":3,"names":["constants_1","__importDefault","require","enumerations_1","messages_1","formPropsIns_1","isPasswordValid","data","passwordCriteria","addPassFail","key","message","result","push","PasswordFailIns","validRange","start","end","validSymbols","syms","default","ascii","symbols","includes","validate","toCompare","messageFunc","checkRange","count","i","length","el","charCodeAt","validFunc","t","checkSequence","nextEl","DetailIns","pc","passMess","password","minLength","maxLength","capital","A","Z","numberCount","zero","nine","attributes","numberSeq","_a","sequence","number","_b","characterSeq","a","z","_c","characters","_d","_e","_f","passwordStrength","checkPassStrength","errorResult","filter","n","attribute","ValidationType","strength","scorePassword","score","letters","variations","digits","test","lower","upper","nonWords","variationCount","check","PasswordStrength","VeryWeak","VeryStrong","Strong","Weak","passwordVali","exports"],"sources":["../../../form/validation/passwordVali.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}