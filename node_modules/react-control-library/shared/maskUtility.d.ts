import { IToValue, IToValueWithCursor } from "./interfacesDelegates/eventInterfaces";
declare function extractConstFromMask(mask: any[]): any[];
declare function extractPureValue(data: any, mask: any[]): string;
declare function toMaskWithCursor(e: any, mask: any[]): IToValueWithCursor;
declare function toMask(value: any, mask: any[]): IToValue;
declare function updateEventArgs(e: any, toMaskResult: IToValueWithCursor): void;
declare function updateDetail(e: any, mask: any[]): void;
declare const maskUtility: {
    toMaskWithCursor: typeof toMaskWithCursor;
    updateEventArgs: typeof updateEventArgs;
    toMask: typeof toMask;
    updateDetail: typeof updateDetail;
    extractPureValue: typeof extractPureValue;
    extractConstFromMask: typeof extractConstFromMask;
};
export default maskUtility;
