import { INumberMask } from "./interfacesDelegates/controlInterfaces";
import { IToValue, IToValueWithCursor } from "./interfacesDelegates/eventInterfaces";
declare function isValidChar(e: any, numberMask: INumberMask): boolean;
declare function extractPureValue(data: any, numberMask: INumberMask): string;
declare function toNumberMaskWithCursor(e: any, numberMask: INumberMask): IToValueWithCursor;
declare function toNumberMask(value: any, numberMask: INumberMask): IToValue;
declare function updateEventArgs(e: any, toNumberMaskResult: IToValueWithCursor): void;
declare function updateDetail(e: any, numberMask: INumberMask): void;
declare const numberMaskUtility: {
    toNumberMaskWithCursor: typeof toNumberMaskWithCursor;
    updateEventArgs: typeof updateEventArgs;
    toNumberMask: typeof toNumberMask;
    updateDetail: typeof updateDetail;
    extractPureValue: typeof extractPureValue;
    isValidChar: typeof isValidChar;
};
export default numberMaskUtility;
