"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var maskUtility_1 = __importDefault(require("../../shared/maskUtility"));
var utility_1 = __importDefault(require("../../shared/utility"));
var formUtility_1 = __importDefault(require("../formUtility"));
var maskedInput_1 = __importDefault(require("./maskedInput"));
var lodash_1 = require("lodash");
var SecureMaskedInput = function (_a) {
    var secure = _a.secure, onChange = _a.onChange, mask = _a.mask, value = _a.value, onFocus = _a.onFocus, onBlur = _a.onBlur, props = __rest(_a, ["secure", "onChange", "mask", "value", "onFocus", "onBlur"]);
    function getSecureValue(value) {
        if (!secure || !secure.getValue)
            return value;
        value = value || '';
        var pureValue = maskUtility_1.default.extractPureValue(value, mask);
        var maskedValue = maskUtility_1.default.toMask(pureValue, mask).value;
        var detail = {
            value: maskUtility_1.default.extractPureValue(value, mask),
            isValid: true,
            metadata: ['Unknown Validity']
        };
        return secure.getValue(detail, maskedValue);
    }
    var _b = react_1.default.useState(value), realValue = _b[0], setRealValue = _b[1];
    var _c = react_1.default.useState(getSecureValue(value)), secureValue = _c[0], setSecureValue = _c[1];
    var _d = react_1.default.useState(mask), realMask = _d[0], setRealMask = _d[1];
    var _e = react_1.default.useState([]), secureMask = _e[0], setSecureMask = _e[1];
    react_1.default.useEffect(function () {
        if (lodash_1.isEqual(mask, realMask))
            return;
        setRealMask(mask);
        setSecureValue(getSecureValue(value));
    }, [mask]);
    react_1.default.useEffect(function () {
        if (secureValue === value)
            return;
        setSecureValue(getSecureValue(value));
        var pureValue = maskUtility_1.default.extractPureValue(value, mask);
        setRealValue(pureValue);
    }, [value]);
    function focusEvent(e) {
        setSecureValue(maskUtility_1.default.toMask(realValue, realMask).value);
        setSecureMask(realMask);
        onFocus && onFocus(e);
    }
    function blurEvent(e) {
        setRealValue(maskUtility_1.default.extractPureValue(secureValue, realMask));
        setSecureValue(getSecureValue(secureValue));
        setSecureMask([]);
        onBlur && onBlur(e);
    }
    function changeEvent(e) {
        var maskedValue = maskUtility_1.default.toMask(e.target.value, mask).value;
        setSecureValue(maskedValue);
        e.target.value = maskedValue;
        onChange && onChange(e);
    }
    function keyDownEvent(e) {
        function conditionToOnlyMoveBack(index) {
            var arr = utility_1.default.strings2FlatArray(maskUtility_1.default.extractConstFromMask(mask));
            return arr.includes(e.target.value[index]);
        }
        formUtility_1.default.backspaceDoNotDelete(e, conditionToOnlyMoveBack);
    }
    return (react_1.default.createElement(maskedInput_1.default, __assign({ mask: secureMask, onChange: changeEvent, onBlur: blurEvent, onFocus: focusEvent, value: secureValue, onKeyDown: keyDownEvent }, props)));
};
exports.default = SecureMaskedInput;
//# sourceMappingURL=secureMaskedInput.js.map