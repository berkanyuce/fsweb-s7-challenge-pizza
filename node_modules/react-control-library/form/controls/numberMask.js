"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var type_check_utility_1 = require("type-check-utility");
var utility_1 = __importDefault(require("../../shared/utility"));
var customInput_1 = __importDefault(require("./customInput"));
var formPropsIns_1 = require("../formPropsIns");
var formVali_1 = __importDefault(require("../validation/formVali"));
var appSettings_1 = __importDefault(require("../../shared/appSettings"));
var numberMaskUtility_1 = __importDefault(require("../../shared/numberMaskUtility"));
var formUtility_1 = __importDefault(require("../formUtility"));
var constants_1 = __importDefault(require("../../shared/constants"));
var NumberMask = function (_a) {
    var _b = _a.mask, mask = _b === void 0 ? {} : _b, extractValueToSet = _a.extractValueToSet, props = __rest(_a, ["mask", "extractValueToSet"]);
    mask = __assign(__assign({}, appSettings_1.default.defaultNumberMask()), mask);
    function changeEvent(e) {
        var toMaskResult = numberMaskUtility_1.default.toNumberMaskWithCursor(e, mask);
        numberMaskUtility_1.default.updateEventArgs(e, toMaskResult);
        numberMaskUtility_1.default.updateDetail(e, mask);
        props.onChange && props.onChange(e);
    }
    function onBlur(e) {
        var pureValue = numberMaskUtility_1.default.extractPureValue(e.target.value, mask);
        if (!type_check_utility_1.isDefined(pureValue))
            pureValue = '';
        if ([constants_1.default.keyboard.hyphen, mask.decimalSymbol].includes(pureValue)) {
            numberMaskUtility_1.default.updateEventArgs(e, { value: '', cursorStart: 0, cursorEnd: 0 });
        }
        numberMaskUtility_1.default.updateDetail(e, mask);
        props.onBlur && props.onBlur(e);
    }
    function keyPressEvent(e) {
        if (!numberMaskUtility_1.default.isValidChar(e, mask)) {
            e.preventDefault();
        }
        props.onKeyPress && props.onKeyPress(e);
    }
    function extractValueToSetLocal(e, value) {
        var valueWithCursor = numberMaskUtility_1.default.toNumberMaskWithCursor(e || { target: { value: value } }, mask);
        return valueWithCursor;
    }
    function keyDownEvent(e) {
        if (type_check_utility_1.isNotDefinedOrEmpty(mask.thousandsSeparatorSymbol) || type_check_utility_1.isNotDefinedOrEmpty(e.target.value)) {
            return;
        }
        var conditionToOnlyMoveBack = function (index) {
            var arr = utility_1.default.strings2FlatArray([mask.thousandsSeparatorSymbol, mask.suffix]);
            return arr.includes(e.target.value[index]);
        };
        formUtility_1.default.backspaceDoNotDelete(e, conditionToOnlyMoveBack);
        props.onKeyDown && props.onKeyDown(e);
    }
    var params = {
        validation: new formPropsIns_1.ValidationIns(formVali_1.default.alwaysValid),
        onBlur: onBlur,
        onChange: changeEvent,
        extractValueToValidate: function (value) { return numberMaskUtility_1.default.extractPureValue(value, mask); },
        onKeyPress: keyPressEvent,
        onKeyDown: keyDownEvent
    };
    return (react_1.default.createElement(customInput_1.default, __assign({ extractValueToSet: extractValueToSet || extractValueToSetLocal }, props, params)));
};
exports.default = NumberMask;
//# sourceMappingURL=numberMask.js.map