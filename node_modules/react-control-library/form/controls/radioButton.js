"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var type_check_utility_1 = require("type-check-utility");
var formUtility_1 = __importDefault(require("../formUtility"));
var customInput_1 = __importDefault(require("./customInput"));
var RadioButton = function (_a) {
    var type = _a.type, id = _a.id, props = __rest(_a, ["type", "id"]);
    var _b = react_1.default.useState(props.checked || false), data = _b[0], setData = _b[1];
    react_1.default.useEffect(function () { return setData(props.checked); }, [props.checked]);
    var cn = formUtility_1.default.getBooleanControlClassName(data, props.className, 'radio', props.name);
    if (props.inputTag) {
        return (react_1.default.createElement(customInput_1.default, __assign({ type: 'radio', checked: data, id: id, className: cn }, props)));
    }
    var radioId = id;
    if (!type_check_utility_1.isDefined(id)) {
        radioId = (Math.random() * Date.now()).toString();
    }
    return (react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement(customInput_1.default, __assign({ type: 'radio', id: radioId, checked: data, className: cn }, props)),
        react_1.default.createElement("label", { htmlFor: radioId }, props.label || props.children)));
};
exports.default = RadioButton;
//# sourceMappingURL=radioButton.js.map