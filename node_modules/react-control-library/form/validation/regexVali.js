"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var formPropsIns_1 = require("../formPropsIns");
var formRegex_1 = __importDefault(require("../formRegex"));
function regexValidate(regex, data) {
    if (!data)
        return true;
    return new RegExp(regex).test(data);
}
function number(data) {
    return new formPropsIns_1.DetailIns(null, data, regexValidate(formRegex_1.default.number(), data));
}
function decimal(data, decimalLimit, maxLength) {
    var isValid = regexValidate(formRegex_1.default.decimal(decimalLimit, maxLength), data);
    return new formPropsIns_1.DetailIns(null, data, isValid);
}
function alphaNumeric(data, allowSymbols) {
    var isValid = regexValidate(formRegex_1.default.alphaNumeric(allowSymbols), data);
    return new formPropsIns_1.DetailIns(null, data, isValid);
}
function email(data, pattern) {
    if (pattern === void 0) { pattern = null; }
    var regex = !!pattern ? new RegExp(pattern) : formRegex_1.default.email();
    var isValid = regexValidate(regex, data);
    return new formPropsIns_1.DetailIns(null, data, isValid);
}
function patternMatch(data, pattern) {
    if (!pattern)
        return new formPropsIns_1.DetailIns(null, data, true, null);
    var isValid = regexValidate(pattern, data);
    return new formPropsIns_1.DetailIns(null, data, isValid);
}
function notPatternMatch(data, restrictSymbols) {
    if (!data)
        return new formPropsIns_1.DetailIns(null, data, true, null);
    var isValid = !regexValidate(formRegex_1.default.custom(restrictSymbols), data);
    return new formPropsIns_1.DetailIns(null, data, isValid);
}
var regexVali = { regexValidate: regexValidate, number: number, decimal: decimal, notPatternMatch: notPatternMatch, patternMatch: patternMatch, email: email, alphaNumeric: alphaNumeric };
exports.default = regexVali;
//# sourceMappingURL=regexVali.js.map