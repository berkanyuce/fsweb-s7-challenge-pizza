"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function modRegex(originalRegex, symbols, temp) {
    if (symbols === void 0) { symbols = ''; }
    if (temp === void 0) { temp = 'SPECIAL'; }
    var regex = originalRegex.source || originalRegex;
    regex = regex.replace(temp, symbols);
    return regex;
}
var FormRegex = {
    addEscapeToRegex: function (pattern) {
        if (!pattern)
            return '';
        pattern = pattern.replace(/_/g, '\\_');
        pattern = pattern.replace(/-/g, '\\-');
        return pattern;
    },
    number: function () { return /^\d+$/; },
    decimal: function (decimalLimit, maxLength) {
        var regex = /^-?[0-9]{0,maxLength}(\.[0-9]{0,decimalLimit})?$/;
        maxLength = maxLength - (decimalLimit + 1);
        var modified = modRegex(regex, maxLength, 'maxLength');
        modified = modRegex(modified, decimalLimit, 'decimalLimit');
        return new RegExp(modified);
    },
    custom: function (allowSymbols) {
        return new RegExp(modRegex(/^[SPECIAL]*$/, allowSymbols));
    },
    alphaNumeric: function (allowSymbols) {
        if (allowSymbols === void 0) { allowSymbols = ''; }
        return new RegExp(modRegex(/^[A-Za-z0-9SPECIAL]*$/, allowSymbols));
    },
    email: function () {
        var regex = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])/;
        return regex;
    }
};
exports.default = FormRegex;
//# sourceMappingURL=formRegex.js.map